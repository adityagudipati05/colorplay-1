name: Deploy OTP Visitor Management System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: Install backend dependencies
        run: |
          cd server
          npm ci
      
      - name: Run backend tests
        run: |
          cd server
          npm test
        env:
          MONGO_TEST_URI: mongodb://localhost:27017/hostel-otp-test
          JWT_SECRET: test_jwt_secret_key
          OTP_SECRET: test_otp_secret_key

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: security-client/package-lock.json
      
      - name: Install frontend dependencies
        run: |
          cd security-client
          npm ci
      
      - name: Build frontend
        run: |
          cd security-client
          npm run build
        env:
          VITE_API_URL: http://localhost:4000
          VITE_SOCKET_URL: http://localhost:4000

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run security audit
        run: |
          cd server
          npm audit --audit-level high
          cd ../security-client
          npm audit --audit-level high

  deploy-staging:
    needs: [test-backend, test-frontend, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here
          
  deploy-production:
    needs: [deploy-staging]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to production
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/VJ-Hostels
            git pull origin main
            docker-compose down
            docker-compose up -d --build
            docker-compose exec -T backend npm run seed
